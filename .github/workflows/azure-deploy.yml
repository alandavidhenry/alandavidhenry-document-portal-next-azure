name: Deploy to Azure
on:
  push:
    branches: [main]

env:
  AZURE_WEBAPP_NAME: document-portal-app
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          # Ensure next-env.d.ts exists
          npx next env

      - name: Build Next.js app
        run: npm run build
        env:
          # Build-time environment variables
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
          AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

      - name: Prepare deployment package
        run: |
          # Create deployment directory
          mkdir -p deploy

          # Copy necessary files
          cp -r .next deploy/
          cp -r public deploy/
          cp package.json deploy/
          cp package-lock.json deploy/
          cp next.config.mjs deploy/

          # Create production-only package.json
          node -e "const pkg = require('./package.json'); delete pkg.devDependencies; require('fs').writeFileSync('deploy/package.json', JSON.stringify(pkg, null, 2));"

          # Create web.config for Azure
          cat > deploy/web.config << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NextJS Routes" stopProcessing="true">
                    <match url="/*" />
                    <conditions logicalGrouping="MatchAll">
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="server.js" />
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering>
                  <hiddenSegments>
                    <add segment="node_modules" />
                  </hiddenSegments>
                </requestFiltering>
              </security>
            </system.webServer>
          </configuration>
          EOL

          # Create startup script
          cat > deploy/server.js << 'EOL'
          const path = require('path');
          const { createServer } = require('http');
          const { parse } = require('url');
          const next = require('next');

          const app = next({ dev: false, conf: { configFile: path.resolve(__dirname, './next.config.mjs') } });
          const handle = app.getRequestHandler();

          app.prepare().then(() => {
            createServer((req, res) => {
              const parsedUrl = parse(req.url, true);
              handle(req, res, parsedUrl);
            }).listen(process.env.PORT || 3000, () => {
              console.log('> Ready on http://localhost:' + (process.env.PORT || 3000));
            });
          });
          EOL

          # Install production dependencies only
          cd deploy
          npm ci --only=production --ignore-scripts

          # Create zip file for deployment
          cd ..
          zip -r deploy.zip deploy/*

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy.zip

      - name: Configure Azure Web App Settings
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update App Settings
        run: |
          az webapp config set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group document-portal-rg \
            --linux-fx-version "NODE|20-lts" \
            --startup-file server.js

          az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group document-portal-rg \
            --settings \
              WEBSITE_NODE_DEFAULT_VERSION="20-lts" \
              NODE_ENV="production" \
              NEXTAUTH_URL="${{ secrets.NEXTAUTH_URL }}" \
              NEXTAUTH_SECRET="${{ secrets.NEXTAUTH_SECRET }}" \
              AZURE_AD_CLIENT_SECRET="${{ secrets.AZURE_AD_CLIENT_SECRET }}"
